{"remainingRequest":"/Users/warrenyang/Documents/mycode/2022/web-app/node_modules/babel-loader/lib/index.js!/Users/warrenyang/Documents/mycode/2022/web-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/warrenyang/Documents/mycode/2022/web-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/warrenyang/Documents/mycode/2022/web-app/src/views/dashboard/admin/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/warrenyang/Documents/mycode/2022/web-app/src/views/dashboard/admin/index.vue","mtime":1668331774000},{"path":"/Users/warrenyang/Documents/mycode/2022/web-app/babel.config.js","mtime":1668233877000},{"path":"/Users/warrenyang/Documents/mycode/2022/web-app/node_modules/cache-loader/dist/cjs.js","mtime":1668390099165},{"path":"/Users/warrenyang/Documents/mycode/2022/web-app/node_modules/babel-loader/lib/index.js","mtime":1668390101294},{"path":"/Users/warrenyang/Documents/mycode/2022/web-app/node_modules/cache-loader/dist/cjs.js","mtime":1668390099165},{"path":"/Users/warrenyang/Documents/mycode/2022/web-app/node_modules/vue-loader/lib/index.js","mtime":1668390101491}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQtaW5kZXguanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5qc29uLnN0cmluZ2lmeS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwoKaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JzsKdmFyIHJlZnJlc2hUaW1lID0gMzAwOwp2YXIgdGhyb3R0bGUgPSBmdW5jdGlvbiB0aHJvdHRsZShmdW5jKSB7CiAgdmFyIHdhaXQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IDUwOwogIC8vIOS4iuS4gOasoeaJp+ihjOivpeWHveaVsOeahOaXtumXtAogIHZhciBsYXN0VGltZSA9IDA7CiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgIC8vIOW9k+WJjeaXtumXtAogICAgdmFyIG5vdyA9ICtuZXcgRGF0ZSgpOwogICAgLy8g5bCG5b2T5YmN5pe26Ze05ZKM5LiK5LiA5qyh5omn6KGM5Ye95pWw5pe26Ze05a+55q+UCiAgICAvLyDlpoLmnpzlt67lgLzlpKfkuo7orr7nva7nmoTnrYnlvoXml7bpl7TlsLHmiafooYzlh73mlbAKICAgIGlmIChub3cgLSBsYXN0VGltZSA+IHdhaXQpIHsKICAgICAgbGFzdFRpbWUgPSBub3c7CiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykgewogICAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07CiAgICAgIH0KICAgICAgZnVuYy5hcHBseSh0aGlzLCBhcmdzKTsKICAgIH0KICB9Owp9OwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0Rhc2hib2FyZEFkbWluJywKICBjb21wb25lbnRzOiB7fSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbWFpbkFydGljbGU6ICcnLAogICAgICBtb3JlQXJ0Y2xlTGlzdDogW10sCiAgICAgIGV5ZVBvdGluZXI6IHsKICAgICAgICB4OiAwLAogICAgICAgIHk6IDAsCiAgICAgICAgYXJlYU5hbWU6ICctJywKICAgICAgICBzdGFydFRpbWVzdGFtcDogMCwKICAgICAgICByZXNldFJlY29tbWVkVGltZXN0YW1wOiAwLAogICAgICAgIC8vIOmHjeaWsOaOqOiNkOaXtumXtAogICAgICAgIG5vd1RpbWVzdGFtcDogMAogICAgICB9LAogICAgICBhcmVhczogW10sCiAgICAgIGNzdkRhdGE6IFtdLAogICAgICBjaGFuZ2VUb01haW5UaW1lOiAzMDAwLAogICAgICByZXNldFJlY29tbWVkVGltZTogNTAwMCwKICAgICAgbG9hZGluZzogZmFsc2UKICAgIH07CiAgfSwKICB3YXRjaDogewogICAgY3N2RGF0YTogZnVuY3Rpb24gY3N2RGF0YShuZXdWYWwpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgaWYgKG5ld1ZhbC5sZW5ndGggIT09IDApIHsKICAgICAgICB0aGlzLm1haW5BcnRpY2xlID0gbmV3VmFsWzBdOwogICAgICAgIHRoaXMubW9yZUFydGNsZUxpc3QgPSBuZXdWYWwuZmlsdGVyKGZ1bmN0aW9uICh2YWx1ZSwgaW5kZXgsIGFycmF5KSB7CiAgICAgICAgICByZXR1cm4gaW5kZXggPiAwOwogICAgICAgIH0pOwogICAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIF90aGlzLmdldEFyZWFzKCk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICAnZXllUG90aW5lci5hcmVhTmFtZSc6IGZ1bmN0aW9uIGV5ZVBvdGluZXJBcmVhTmFtZShuZXdWYWwpIHsKICAgICAgdGhpcy5oYXNDaGFuZ2VkID0gZmFsc2U7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzMiA9IHRoaXM7CiAgICB3aW5kb3cuc2F2ZURhdGFBY3Jvc3NTZXNzaW9ucyA9IHRydWU7CiAgICB3aW5kb3cud2ViZ2F6ZXIuc2V0R2F6ZUxpc3RlbmVyKGZ1bmN0aW9uIChkYXRhLCB0aW1lc3RhbXApIHsKICAgICAgLy8gY29uc29sZS5sb2coZGF0YSwgdGltZXN0YW1wKQogICAgICBfdGhpczIuY2FjdWxhdGVQb3NpdGlvbihkYXRhLCB0aW1lc3RhbXApOwogICAgfSkuYmVnaW4oKTsKICAgIHRoaXMuZ2V0UmVjb21tb25kKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBjYWN1bGF0ZVBvc2l0aW9uOiB0aHJvdHRsZShmdW5jdGlvbiAoZGF0YSwgdGltZXN0YW1wKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwogICAgICBpZiAoZGF0YSA9PSBudWxsKSByZXR1cm47CiAgICAgIHZhciB4ID0gZGF0YS54LAogICAgICAgIHkgPSBkYXRhLnk7CiAgICAgIHRoaXMuZXllUG90aW5lci54ID0geDsKICAgICAgdGhpcy5leWVQb3RpbmVyLnkgPSB5OwoKICAgICAgLy8g6I635Y+W5YGc55WZ5Yy65Z+f5ZCN56ewCiAgICAgIHZhciBhcmVhTmFtZSA9IHRoaXMuY2hlY2tJbldpdGNoQXJlYSh4LCB5KTsKICAgICAgLy8g5aaC5p6c5Yy65Z+f5ZCN56ew5pyJ5Y+Y5YyW77yM5YiZ5pu05paw5pe26Ze0CiAgICAgIGlmICh0aGlzLmV5ZVBvdGluZXIuYXJlYU5hbWUgIT09IGFyZWFOYW1lKSB7CiAgICAgICAgdGhpcy5leWVQb3RpbmVyLmFyZWFOYW1lID0gYXJlYU5hbWU7CiAgICAgICAgdGhpcy5leWVQb3RpbmVyLnN0YXJ0VGltZXN0YW1wID0gdGltZXN0YW1wOwogICAgICAgIHRoaXMuZXllUG90aW5lci5yZXNldFJlY29tbWVkVGltZXN0YW1wID0gdGltZXN0YW1wOwogICAgICB9CiAgICAgIHRoaXMuZXllUG90aW5lci5ub3dUaW1lc3RhbXAgPSB0aW1lc3RhbXA7CgogICAgICAvLyDlpoLmnpzmsqHlnKjlj6/op4bljLrln5/vvIzliJnkuI3nu6fnu63kuoYKICAgICAgaWYgKCF0aGlzLmV5ZVBvdGluZXIuYXJlYU5hbWUpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgaWYgKHRoaXMuZXllUG90aW5lci5hcmVhTmFtZSAhPT0gJ21haW4nICYmIHRoaXMuZXllUG90aW5lci5ub3dUaW1lc3RhbXAgLSB0aGlzLmV5ZVBvdGluZXIucmVzZXRSZWNvbW1lZFRpbWVzdGFtcCA+IHRoaXMuY2hhbmdlVG9NYWluVGltZSkgewogICAgICAgIC8vIOmdnuS4u+WMuuWfnzNz5Lul5LiK77yM5YiH5o2i5paH56ug5Yiw5Li75Yy65Z+fCiAgICAgICAgdmFyIGFjdGl2ZUFyZWFJbmRleCA9IHRoaXMuYXJlYXMuZmluZEluZGV4KGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICAgICAgcmV0dXJuIHZhbHVlLmFyZWFOYW1lID09PSBfdGhpczMuZXllUG90aW5lci5hcmVhTmFtZTsKICAgICAgICB9KTsKICAgICAgICB0aGlzLmNzdkRhdGEuc3BsaWNlKDAsIDEsIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5jc3ZEYXRhW2FjdGl2ZUFyZWFJbmRleF0pKSk7CiAgICAgICAgLy8gY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkodGhpcy5jc3ZEYXRhKSkKICAgICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpczMuZ2V0UmVjb21tb25kKCk7CiAgICAgICAgICBfdGhpczMuZXllUG90aW5lci5yZXNldFJlY29tbWVkVGltZXN0YW1wID0gdGltZXN0YW1wOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgaWYgKHRoaXMuZXllUG90aW5lci5hcmVhTmFtZSA9PT0gJ21haW4nICYmIHRoaXMuZXllUG90aW5lci5ub3dUaW1lc3RhbXAgLSB0aGlzLmV5ZVBvdGluZXIucmVzZXRSZWNvbW1lZFRpbWVzdGFtcCA+IHRoaXMucmVzZXRSZWNvbW1lZFRpbWUpIHsKICAgICAgICAvLyDkuLvljLrln581c+S7peS4iu+8jOS4lOaOqOiNkOaXtumXtOi2hei/hzVz77yM6YeN5paw6K+35rGC5LiA5LiL5LiL5pa555qE5o6o6I2QCiAgICAgICAgdGhpcy5nZXRSZWNvbW1vbmQoKTsKICAgICAgICB0aGlzLmV5ZVBvdGluZXIucmVzZXRSZWNvbW1lZFRpbWVzdGFtcCA9IHRpbWVzdGFtcDsKICAgICAgfQogICAgfSwgcmVmcmVzaFRpbWUpLAogICAgZ2V0QXJlYXM6IGZ1bmN0aW9uIGdldEFyZWFzKCkgewogICAgICB2YXIgYXJ0aWNsZXMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdhcnRpY2xlLWl0ZW0nKTsKICAgICAgdmFyIGFyZWFzID0gW107CiAgICAgIGFydGljbGVzLmZvckVhY2goZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgICAgdmFyIF8kJG9mZnNldCA9ICQodmFsdWUpLm9mZnNldCgpLAogICAgICAgICAgdG9wID0gXyQkb2Zmc2V0LnRvcCwKICAgICAgICAgIGxlZnQgPSBfJCRvZmZzZXQubGVmdDsKICAgICAgICBhcmVhcy5wdXNoKHsKICAgICAgICAgIHRvcDogdG9wLAogICAgICAgICAgbGVmdDogbGVmdCwKICAgICAgICAgIHdpZHRoOiAkKHZhbHVlKS53aWR0aCgpLAogICAgICAgICAgaGVpZ2h0OiAkKHZhbHVlKS5oZWlnaHQoKSwKICAgICAgICAgIGFyZWFOYW1lOiAkKHZhbHVlKS5hdHRyKCdhcmVhLW5hbWUnKQogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgdGhpcy5hcmVhcyA9IGFyZWFzOwogICAgICBjb25zb2xlLmxvZyh0aGlzLmFyZWFzKTsKICAgIH0sCiAgICBjaGVja0luV2l0Y2hBcmVhOiBmdW5jdGlvbiBjaGVja0luV2l0Y2hBcmVhKHgsIHkpIHsKICAgICAgdmFyIGFyZWFOYW1lID0gJyc7CiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5hcmVhcy5sZW5ndGg7IGkrKykgewogICAgICAgIHZhciBhcmVhID0gdGhpcy5hcmVhc1tpXTsKICAgICAgICBpZiAoeCA+IGFyZWEubGVmdCAmJiB4IDwgYXJlYS5sZWZ0ICsgYXJlYS53aWR0aCAmJiB5ID4gYXJlYS50b3AgJiYgeSA8IGFyZWEudG9wICsgYXJlYS5oZWlnaHQpIHsKICAgICAgICAgIGFyZWFOYW1lID0gYXJlYS5hcmVhTmFtZTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gYXJlYU5hbWU7CiAgICB9LAogICAgZ2V0UmVjb21tb25kOiBmdW5jdGlvbiBnZXRSZWNvbW1vbmQoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICB2YXIgZmlyc3Q7CiAgICAgIGlmICh0aGlzLmNzdkRhdGEubGVuZ3RoICE9PSAwKSB7CiAgICAgICAgZmlyc3QgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuY3N2RGF0YVswXSkpOwogICAgICB9CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBjc3ZEYXRhID0gZmlyc3QgPyBbZmlyc3RdIDogW107CiAgICAgICAgdmFyIGNzdkRhdGFJbml0TGVuZ3RoID0gMDsKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDQgLSBjc3ZEYXRhSW5pdExlbmd0aDsgaSsrKSB7CiAgICAgICAgICB2YXIgcmFuZG9tVmFsdWUgPSBfdGhpczQucmFuZG9tKDAsIDEwMDAwKTsKICAgICAgICAgIGNzdkRhdGEucHVzaCh7CiAgICAgICAgICAgIGl0ZW06ICIiLmNvbmNhdChyYW5kb21WYWx1ZSwgIiBcdTU3MDZcdTY4QTZcdTRFMkRcdTU2RkRcdTRFQkFcdTIwMURcdTc2N0VcdTU5RDNcdTVCQTNcdThCQjJcdTZEM0JcdTUyQThcdTRFQ0FcdTU5MjlcdTU0MkZcdTUyQTgiKSwKICAgICAgICAgICAgdmFsdWU6IHJhbmRvbVZhbHVlCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgICAgX3RoaXM0LmNzdkRhdGEgPSBjc3ZEYXRhOwogICAgICAgIF90aGlzNC5sb2FkaW5nID0gZmFsc2U7CiAgICAgIH0sIDYwMCk7CiAgICB9LAogICAgcmFuZG9tOiBmdW5jdGlvbiByYW5kb20oYSwgYikgewogICAgICAvLyDpmo/mnLrlh73mlbAgIOmaj+acuueUn+aIkGHlkoxi5LmL6Ze055qE5LiA5Liq5pWwCiAgICAgIHJldHVybiBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAoYiAtIGEpICsgYSk7IC8vIOWFrOW8jwogICAgfQogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AAEA;EAAA;EACA;EACA;EACA;IACA;IACA;IACA;IACA;IACA;MACAA;MAAA,kCANAC;QAAAA;MAAA;MAOAC;IACA;EACA;AACA;AAEA;EACAC;EACAC;EACAC;IACA;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QAAA;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAJ;MAAA;MACA;QACA;QACA;UAAA;QAAA;QACA;UACA;QACA;MACA;IACA;IACA;MACA;IACA;EACA;EACAK;IAAA;IACAC;IACAA,gBACAC;MACA;MACA;IACA;IAEA;EACA;EACAC;IACAC;MAAA;MACA;MAEA;QAAAf;MACA;MACA;;MAEA;MACA;MACA;MACA;QACA;QACA;QACA;MACA;MACA;;MAEA;MACA;QACA;MACA;MAEA;QACA;QACA;UAAA;QAAA;QACA;QACA;QACA;UACA;UACA;QACA;MACA;QACA;QACA;QACA;MACA;IACA;IACAgB;MACA;MACA;MACAC;QACA;UAAAC;UAAAC;QACAd;UACAa;UACAC;UACAC;UACAC;UACApB;QACA;MACA;MACA;MACAqB;IACA;IACAC;MACA;MACA;QACA;QACA;UACAtB;UACA;QACA;MACA;MAEA;IACA;IACAuB;MAAA;MACA;MACA;MACA;QACAC;MACA;MACAC;QACA;QACA;QACA;UACA;UACApB;YACAqB;YACAC;UACA;QACA;QACA;QACA;MACA;IACA;IACAC;MAAA;MACA;IACA;EACA;AACA","names":["lastTime","args","func","name","components","data","mainArticle","moreArtcleList","eyePotiner","x","y","areaName","startTimestamp","resetRecommedTimestamp","nowTimestamp","areas","csvData","changeToMainTime","resetRecommedTime","loading","watch","mounted","window","setGazeListener","methods","caculatePosition","getAreas","articles","top","left","width","height","console","checkInWitchArea","getRecommond","first","setTimeout","item","value","random"],"sourceRoot":"src/views/dashboard/admin","sources":["index.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard-editor-container\">\n    <div class=\"main-article-container\">\n      <div class=\"main-article article-item\" area-name=\"main\">\n        {{ mainArticle.item }}\n      </div>\n      <div v-loading=\"loading\" class=\"more-article\">\n        <el-row>\n          <el-col v-for=\"(article, index) in moreArtcleList\" :key=\"index\" :xs=\"24\" :sm=\"24\" :lg=\"8\">\n            <div class=\"more-article-item article-item\" :area-name=\"'article' + (index + 1)\">\n              {{ article.item }}\n            </div>\n          </el-col>\n        </el-row>\n      </div>\n    </div>\n\n    <div class=\"info-block\">\n      当前追踪刷新率 300 ms\n      <br>\n      主区域停留推荐阈值\n      <el-input v-model=\"resetRecommedTime\" size=\"mini\">\n        <template slot=\"append\">ms</template>\n      </el-input>\n      <br>\n      其他域停留推荐阈值\n      <el-input v-model=\"changeToMainTime\" size=\"mini\">\n        <template slot=\"append\">ms</template>\n      </el-input>\n      <el-divider />\n      当前处于 {{ eyePotiner.areaName }} 区域\n      <br>\n      停留时长 {{ ((eyePotiner.nowTimestamp - eyePotiner.startTimestamp) / 1000).toFixed(1) }} s\n      <br>\n      上次推荐间隔时长 {{ ((eyePotiner.nowTimestamp - eyePotiner.resetRecommedTimestamp) / 1000).toFixed(1) }} s\n      <br>\n      x: {{ eyePotiner.x.toFixed(1) }}\n      <br>\n      y: {{ eyePotiner.y.toFixed(1) }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport $ from 'jquery'\nconst refreshTime = 300\n\nconst throttle = (func, wait = 50) => {\n  // 上一次执行该函数的时间\n  let lastTime = 0\n  return function(...args) {\n    // 当前时间\n    const now = +new Date()\n    // 将当前时间和上一次执行函数时间对比\n    // 如果差值大于设置的等待时间就执行函数\n    if (now - lastTime > wait) {\n      lastTime = now\n      func.apply(this, args)\n    }\n  }\n}\n\nexport default {\n  name: 'DashboardAdmin',\n  components: {},\n  data() {\n    return {\n      mainArticle: '',\n      moreArtcleList: [],\n      eyePotiner: {\n        x: 0,\n        y: 0,\n        areaName: '-',\n        startTimestamp: 0,\n        resetRecommedTimestamp: 0, // 重新推荐时间\n        nowTimestamp: 0\n      },\n      areas: [],\n      csvData: [],\n      changeToMainTime: 3000,\n      resetRecommedTime: 5000,\n      loading: false\n    }\n  },\n  watch: {\n    csvData(newVal) {\n      if (newVal.length !== 0) {\n        this.mainArticle = newVal[0]\n        this.moreArtcleList = newVal.filter((value, index, array) => index > 0)\n        this.$nextTick(() => {\n          this.getAreas()\n        })\n      }\n    },\n    'eyePotiner.areaName'(newVal) {\n      this.hasChanged = false\n    }\n  },\n  mounted() {\n    window.saveDataAcrossSessions = true\n    window.webgazer\n      .setGazeListener((data, timestamp) => {\n        // console.log(data, timestamp)\n        this.caculatePosition(data, timestamp)\n      }).begin()\n\n    this.getRecommond()\n  },\n  methods: {\n    caculatePosition: throttle(function(data, timestamp) {\n      if (data == null) return\n\n      const { x, y } = data\n      this.eyePotiner.x = x\n      this.eyePotiner.y = y\n\n      // 获取停留区域名称\n      const areaName = this.checkInWitchArea(x, y)\n      // 如果区域名称有变化，则更新时间\n      if (this.eyePotiner.areaName !== areaName) {\n        this.eyePotiner.areaName = areaName\n        this.eyePotiner.startTimestamp = timestamp\n        this.eyePotiner.resetRecommedTimestamp = timestamp\n      }\n      this.eyePotiner.nowTimestamp = timestamp\n\n      // 如果没在可视区域，则不继续了\n      if (!this.eyePotiner.areaName) {\n        return\n      }\n\n      if (this.eyePotiner.areaName !== 'main' && (this.eyePotiner.nowTimestamp - this.eyePotiner.resetRecommedTimestamp) > this.changeToMainTime) {\n        // 非主区域3s以上，切换文章到主区域\n        const activeAreaIndex = this.areas.findIndex((value) => value.areaName === this.eyePotiner.areaName)\n        this.csvData.splice(0, 1, JSON.parse(JSON.stringify(this.csvData[activeAreaIndex])))\n        // console.log(JSON.stringify(this.csvData))\n        this.$nextTick(() => {\n          this.getRecommond()\n          this.eyePotiner.resetRecommedTimestamp = timestamp\n        })\n      } else if (this.eyePotiner.areaName === 'main' && (this.eyePotiner.nowTimestamp - this.eyePotiner.resetRecommedTimestamp) > this.resetRecommedTime) {\n        // 主区域5s以上，且推荐时间超过5s，重新请求一下下方的推荐\n        this.getRecommond()\n        this.eyePotiner.resetRecommedTimestamp = timestamp\n      }\n    }, refreshTime),\n    getAreas() {\n      const articles = document.getElementsByClassName('article-item')\n      const areas = []\n      articles.forEach((value) => {\n        const { top, left } = $(value).offset()\n        areas.push({\n          top,\n          left,\n          width: $(value).width(),\n          height: $(value).height(),\n          areaName: $(value).attr('area-name')\n        })\n      })\n      this.areas = areas\n      console.log(this.areas)\n    },\n    checkInWitchArea(x, y) {\n      let areaName = ''\n      for (let i = 0; i < this.areas.length; i++) {\n        const area = this.areas[i]\n        if (x > area.left && x < (area.left + area.width) && y > area.top && y < (area.top + area.height)) {\n          areaName = area.areaName\n          break\n        }\n      }\n\n      return areaName\n    },\n    getRecommond() {\n      this.loading = true\n      let first\n      if (this.csvData.length !== 0) {\n        first = JSON.parse(JSON.stringify(this.csvData[0]))\n      }\n      setTimeout(() => {\n        const csvData = first ? [first] : []\n        const csvDataInitLength = 0\n        for (let i = 0; i < 4 - csvDataInitLength; i++) {\n          const randomValue = this.random(0, 10000)\n          csvData.push({\n            item: `${randomValue} 圆梦中国人”百姓宣讲活动今天启动`,\n            value: randomValue\n          })\n        }\n        this.csvData = csvData\n        this.loading = false\n      }, 600)\n    },\n    random(a, b) { // 随机函数  随机生成a和b之间的一个数\n      return Math.round(Math.random() * (b - a) + a) // 公式\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dashboard-editor-container {\n  padding: 0 32px;\n  background-color: rgb(240, 242, 245);\n  position: relative;\n  height: 100vh;\n  width: 100%;\n\n  .info-block {\n    position: fixed;\n    right: 10px;\n    top: 10px;\n    width: 180px;\n    z-index: 99;\n    font-size: 12px;\n    line-height: 20px;\n  }\n\n  .main-article-container {\n    height: 100%;\n    width: 1200px;\n    display: flex;\n    margin: 0 auto;\n    flex-direction: column;\n\n    .article-item {\n      border: 1px solid black;\n      text-align: center;\n    }\n\n    .main-article {\n      flex: 1;\n      overflow-y: auto;\n      padding: 12px;\n    }\n\n    .more-article {\n      flex-shrink: 0;\n      height: 240px;\n      overflow: hidden;\n\n      .more-article-item {\n        padding: 12px;\n        height: 240px;\n      }\n    }\n  }\n}\n</style>\n"]}]}